# stationaryorbit.core:/test/CMakeLists.txt
# Copyright 2020-2021 zawa-ch.
# GPLv3 (or later) license
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.
# If not, see <http://www.gnu.org/licenses/>.
#

function(do_test_nofail target index)
    add_test(NAME ${target}.${index} COMMAND ${target} ${index})
    set_tests_properties(${target}.${index}
    PROPERTIES
        PASS_REGULAR_EXPRESSION "\.\.\.OK"
        FAIL_REGULAR_EXPRESSION "NG"
        SKIP_RETURN_CODE 255
        TIMEOUT 1
)
endfunction(do_test_nofail)
function(do_test_willfail target index)
    add_test(NAME ${target}.${index} COMMAND ${target} ${index})
    set_tests_properties(${target}.${index}
    PROPERTIES
        PASS_REGULAR_EXPRESSION "\.\.\.OK"
        FAIL_REGULAR_EXPRESSION "NG"
        WILL_FAIL true
        SKIP_RETURN_CODE 255
        TIMEOUT 1
)
endfunction(do_test_willfail)
function(do_test_pattern target index pattern)
    add_test(NAME ${target}.${index} COMMAND ${target} ${index})
    set_tests_properties(${target}.${index}
    PROPERTIES
        PASS_REGULAR_EXPRESSION ${pattern}
        SKIP_RETURN_CODE 255
        TIMEOUT 1
)
endfunction(do_test_pattern)

add_executable(stationaryorbit.core.test.algorithms test.algorithms.cpp)
target_link_libraries(stationaryorbit.core.test.algorithms stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.algorithms 1 "value . 77")
do_test_pattern(stationaryorbit.core.test.algorithms 2 "mod . 0")
do_test_pattern(stationaryorbit.core.test.algorithms 3 "value . 2")
do_test_pattern(stationaryorbit.core.test.algorithms 4 "mod . 2")
do_test_willfail(stationaryorbit.core.test.algorithms 5)
do_test_willfail(stationaryorbit.core.test.algorithms 6)
do_test_nofail(stationaryorbit.core.test.algorithms 7)
do_test_nofail(stationaryorbit.core.test.algorithms 8)
do_test_nofail(stationaryorbit.core.test.algorithms 9)
do_test_nofail(stationaryorbit.core.test.algorithms 10)
do_test_nofail(stationaryorbit.core.test.algorithms 11)
do_test_nofail(stationaryorbit.core.test.algorithms 12)
do_test_nofail(stationaryorbit.core.test.algorithms 13)
do_test_nofail(stationaryorbit.core.test.algorithms 14)
do_test_nofail(stationaryorbit.core.test.algorithms 15)
do_test_nofail(stationaryorbit.core.test.algorithms 16)
do_test_nofail(stationaryorbit.core.test.algorithms 17)
do_test_nofail(stationaryorbit.core.test.algorithms 18)
do_test_nofail(stationaryorbit.core.test.algorithms 19)
do_test_nofail(stationaryorbit.core.test.algorithms 20)
do_test_nofail(stationaryorbit.core.test.algorithms 21)
do_test_nofail(stationaryorbit.core.test.algorithms 22)
do_test_nofail(stationaryorbit.core.test.algorithms 23)
do_test_nofail(stationaryorbit.core.test.algorithms 24)
do_test_nofail(stationaryorbit.core.test.algorithms 25)
do_test_nofail(stationaryorbit.core.test.algorithms 26)
do_test_nofail(stationaryorbit.core.test.algorithms 27)
do_test_nofail(stationaryorbit.core.test.algorithms 28)
do_test_nofail(stationaryorbit.core.test.algorithms 29)
do_test_nofail(stationaryorbit.core.test.algorithms 30)
do_test_nofail(stationaryorbit.core.test.algorithms 31)
do_test_nofail(stationaryorbit.core.test.algorithms 32)
do_test_pattern(stationaryorbit.core.test.algorithms 33 "halfangle_sin.0. . 0.707106781186548")
do_test_pattern(stationaryorbit.core.test.algorithms 34 "halfangle_sin.0\.5. . 0\.5")
do_test_pattern(stationaryorbit.core.test.algorithms 35 "halfangle_sin.1. . 0")
do_test_pattern(stationaryorbit.core.test.algorithms 36 "halfangle_cos.0. . 0.707106781186548")
do_test_pattern(stationaryorbit.core.test.algorithms 37 "halfangle_cos.0\.5. . 0\.866025403784439")
do_test_pattern(stationaryorbit.core.test.algorithms 38 "halfangle_cos.1. . 1")
do_test_pattern(stationaryorbit.core.test.algorithms 39 "halfangle_tan.1, 0. . 1")
do_test_pattern(stationaryorbit.core.test.algorithms 40 "halfangle_tan.0\.86602540378443864676372317075294, 0\.5. . 0\.577350269189626")
do_test_pattern(stationaryorbit.core.test.algorithms 41 "atan.1. . 0\.785398163397448")
do_test_pattern(stationaryorbit.core.test.algorithms 42 "atan.0\.70710678118654752440084436210485. . 0\.615479708670387")
do_test_pattern(stationaryorbit.core.test.algorithms 43 "asin.0. . 0")
do_test_pattern(stationaryorbit.core.test.algorithms 44 "asin.0\.29289321881345247559915563789515. . 0\.29725136132120[67]")
do_test_pattern(stationaryorbit.core.test.algorithms 45 "asin.0\.5. . 0\.52359877559829[89]")
do_test_pattern(stationaryorbit.core.test.algorithms 46 "asin.0\.70710678118654752440084436210485. . 0\.785398163397448")
do_test_pattern(stationaryorbit.core.test.algorithms 47 "sin.0. . 0")
do_test_pattern(stationaryorbit.core.test.algorithms 48 "sin.0\.78539816339744830961566084581988. . 0.70710678118654[78]")
do_test_pattern(stationaryorbit.core.test.algorithms 49 "sin.1\.5707963267948966192313216916398. . 1")
do_test_pattern(stationaryorbit.core.test.algorithms 50 "cos.0. . 1")
do_test_pattern(stationaryorbit.core.test.algorithms 51 "cos.0\.78539816339744830961566084581988. . 0.70710678118654[78]")

add_executable(stationaryorbit.core.test.arithmeticoperation test.arithmeticoperation.cpp)
target_link_libraries(stationaryorbit.core.test.arithmeticoperation stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 1 "result . 156")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 2 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 3 "result . 25934")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 4 "status . overflow_positive")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 5 "result . 16982")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 6 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 7 "result . -?[0-9]+")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 8 "status . overflow_positive")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 9 "result . -2160")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 10 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 11 "result . -?[0-9]+")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 12 "status . overflow_negative")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 13 "result . -3780")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 14 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 15 "result . 5580")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 16 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 17 "result . 130")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 18 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 19 "result . 117506")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 20 "status . overflow_negative")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 21 "result . 2578")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 22 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 23 "result . -?[0-9]+")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 24 "status . overflow_negative")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 25 "result . 19330")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 26 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 27 "result . -?[0-9]+")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 28 "status . overflow_positive")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 29 "result . 2716")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 30 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 31 "result . -18266")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 32 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 33 "result . 1859")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 34 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 35 "result . 1011195376")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 36 "status . overflow")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 37 "result . 70435560")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 38 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 39 "result . -?[0-9]+")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 40 "status . overflow")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 41 "result . -92245825")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 42 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 43 "result . -?[0-9]+")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 44 "status . overflow")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 45 "result . 1727936")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 46 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 47 "result . -75627589")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 48 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 49 "result . 11")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 50 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 51 "result . -?[0-9]+")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 52 "status . divide_by_zero")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 53 "result . 1")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 54 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 55 "result . -?[0-9]+")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 56 "status . divide_by_zero")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 57 "result . 0")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 58 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 59 "result . -?[0-9]+")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 60 "status . divide_by_zero")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 61 "result . 6")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 62 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 63 "result . -1")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 64 "status . no_error")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 65 "add_saturate\(.*\) . 156")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 66 "add_saturate\(.*\) . 4294967295")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 67 "add_saturate\(.*\) . 16982")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 68 "add_saturate\(.*\) . 2147483647")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 69 "add_saturate\(.*\) . -2160")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 70 "add_saturate\(.*\) . -2147483648")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 71 "add_saturate\(.*\) . -3780")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 72 "add_saturate\(.*\) . 5580")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 73 "subtract_saturate\(.*\) . 130")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 74 "subtract_saturate\(.*\) . 0")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 75 "subtract_saturate\(.*\) . 2578")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 76 "subtract_saturate\(.*\) . -2147483648")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 77 "subtract_saturate\(.*\) . 19330")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 78 "subtract_saturate\(.*\) . 2147483647")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 79 "subtract_saturate\(.*\) . 2716")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 80 "subtract_saturate\(.*\) . -18266")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 81 "multiply_saturate\(.*\) . 1859")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 82 "multiply_saturate\(.*\) . 4294967295")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 83 "multiply_saturate\(.*\) . 70435560")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 84 "multiply_saturate\(.*\) . 2147483647")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 85 "multiply_saturate\(.*\) . -92245825")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 86 "multiply_saturate\(.*\) . 2147483647")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 87 "multiply_saturate\(.*\) . 1727936")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 88 "multiply_saturate\(.*\) . -75627589")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 89 "divide_saturate\(.*\) . 11")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 90)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 91 "divide_saturate\(.*\) . 1")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 92)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 93 "divide_saturate\(.*\) . 0")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 94)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 95 "divide_saturate\(.*\) . 6")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 96 "divide_saturate\(.*\) . -1")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 97 "add_checked\(.*\) . 156")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 98)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 99 "add_checked\(.*\) . 16982")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 100)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 101 "add_checked\(.*\) . -2160")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 102)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 103 "add_checked\(.*\) . -3780")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 104 "add_checked\(.*\) . 5580")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 105 "subtract_checked\(.*\) . 130")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 106)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 107 "subtract_checked\(.*\) . 2578")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 108)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 109 "subtract_checked\(.*\) . 19330")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 110)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 111 "subtract_checked\(.*\) . 2716")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 112 "subtract_checked\(.*\) . -18266")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 113 "multiply_checked\(.*\) . 1859")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 114)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 115 "multiply_checked\(.*\) . 70435560")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 116)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 117 "multiply_checked\(.*\) . -92245825")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 118)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 119 "multiply_checked\(.*\) . 1727936")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 120 "multiply_checked\(.*\) . -75627589")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 121 "divide_checked\(.*\) . 11")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 122)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 123 "divide_checked\(.*\) . 1")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 124)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 125 "divide_checked\(.*\) . 0")
do_test_willfail(stationaryorbit.core.test.arithmeticoperation 126)
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 127 "divide_checked\(.*\) . 6")
do_test_pattern(stationaryorbit.core.test.arithmeticoperation 128 "divide_checked\(.*\) . -1")
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 129)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 130)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 131)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 132)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 133)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 134)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 135)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 136)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 137)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 138)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 139)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 140)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 141)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 142)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 143)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 144)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 145)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 146)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 147)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 148)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 149)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 150)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 151)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 152)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 153)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 154)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 155)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 156)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 157)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 158)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 159)
do_test_nofail(stationaryorbit.core.test.arithmeticoperation 160)

add_executable(stationaryorbit.core.test.basicmath test.basicmath.cpp)
target_link_libraries(stationaryorbit.core.test.basicmath stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.basicmath 1 "pi.float. . 3\.14159[23]")
do_test_pattern(stationaryorbit.core.test.basicmath 2 "pi.double. . 3\.14159265358979")
do_test_pattern(stationaryorbit.core.test.basicmath 3 "sin.0. . 0")
do_test_pattern(stationaryorbit.core.test.basicmath 4 "sin.0\.78539816339744830961566084581988. . 0.70710678118654[78]")
do_test_pattern(stationaryorbit.core.test.basicmath 5 "sin.1\.5707963267948966192313216916398. . 1")

add_executable(stationaryorbit.core.test.bitmask test.bitmask.cpp)
target_link_libraries(stationaryorbit.core.test.bitmask stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.bitmask 1 "mask . [Ff]0")
do_test_pattern(stationaryorbit.core.test.bitmask 2 "mask . [Aa][Aa]")
do_test_pattern(stationaryorbit.core.test.bitmask 3 "begin_index . 4")
do_test_pattern(stationaryorbit.core.test.bitmask 4 "begin_index . 1")
do_test_pattern(stationaryorbit.core.test.bitmask 5 "end_index . 8")
do_test_pattern(stationaryorbit.core.test.bitmask 6 "end_index . 8")
do_test_pattern(stationaryorbit.core.test.bitmask 7 "length . 4")
do_test_pattern(stationaryorbit.core.test.bitmask 8 "length . 7")
do_test_pattern(stationaryorbit.core.test.bitmask 9 "get_from.0x38. . 30")
do_test_pattern(stationaryorbit.core.test.bitmask 10 "get_aligned_from.0x38. . 3")
do_test_pattern(stationaryorbit.core.test.bitmask 11 "get_from.0x250. . 50")
do_test_pattern(stationaryorbit.core.test.bitmask 12 "get_aligned_from.0x250. . 1")
do_test_pattern(stationaryorbit.core.test.bitmask 13 "set_to.0x00, 0xAA. . [Aa]0")
do_test_pattern(stationaryorbit.core.test.bitmask 14 "set_aligned_to.0xAA, 3. . 3[Aa]")
do_test_pattern(stationaryorbit.core.test.bitmask 15 ".~mask. . 55555555")
do_test_pattern(stationaryorbit.core.test.bitmask 16 "get_aligned_from.0x38. . 8")
do_test_pattern(stationaryorbit.core.test.bitmask 17 "get_from.0xFF00FF00. . [Ff][Ff]00[Ff][Ff]00")
do_test_pattern(stationaryorbit.core.test.bitmask 18 "get_from.0xFF00FF00. . 0")
do_test_pattern(stationaryorbit.core.test.bitmask 19 "get_from.0xFF00FF00. . [Ff][Ff]00[Ff][Ff]00")
do_test_pattern(stationaryorbit.core.test.bitmask 20 "get_from.0xFF00FF00. . 0")
do_test_pattern(stationaryorbit.core.test.bitmask 21 "mask . 00000000000000000000000011110000")
do_test_pattern(stationaryorbit.core.test.bitmask 22 "mask . 00000000000000000000000010101010")
do_test_pattern(stationaryorbit.core.test.bitmask 23 "begin_index . 4")
do_test_pattern(stationaryorbit.core.test.bitmask 24 "begin_index . 1")
do_test_pattern(stationaryorbit.core.test.bitmask 25 "end_index . 8")
do_test_pattern(stationaryorbit.core.test.bitmask 26 "end_index . 8")
do_test_pattern(stationaryorbit.core.test.bitmask 27 "length . 4")
do_test_pattern(stationaryorbit.core.test.bitmask 28 "length . 7")
do_test_pattern(stationaryorbit.core.test.bitmask 29 "get_from.0x38. . 00000000000000000000000000110000")
do_test_pattern(stationaryorbit.core.test.bitmask 30 "get_aligned_from.0x38. . 00000000000000000000000000000011")
do_test_pattern(stationaryorbit.core.test.bitmask 31 "get_from.0x250. . 00000000000000000000000001010000")
do_test_pattern(stationaryorbit.core.test.bitmask 32 "get_aligned_from.0x250. . 00000000000000000000000000000001")
do_test_pattern(stationaryorbit.core.test.bitmask 33 "set_to.0x00, 0xAA. . 00000000000000000000000010100000")
do_test_pattern(stationaryorbit.core.test.bitmask 34 "set_aligned_to.0xAA, 3. . 00000000000000000000000000111010")
do_test_pattern(stationaryorbit.core.test.bitmask 35 ".~mask. . 01010101010101010101010101010101")
do_test_pattern(stationaryorbit.core.test.bitmask 36 "get_aligned_from.0x38. . 00000000000000000000000000001000")
do_test_pattern(stationaryorbit.core.test.bitmask 37 "get_from.0xFF00FF00. . 11111111000000001111111100000000")
do_test_pattern(stationaryorbit.core.test.bitmask 38 "get_from.0xFF00FF00. . 00000000000000000000000000000000")
do_test_pattern(stationaryorbit.core.test.bitmask 39 "get_from.0xFF00FF00. . 11111111000000001111111100000000")
do_test_pattern(stationaryorbit.core.test.bitmask 40 "get_from.0xFF00FF00. . 00000000000000000000000000000000")

add_executable(stationaryorbit.core.test.constarray test.constarray.cpp)
target_link_libraries(stationaryorbit.core.test.constarray stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.constarray 1 ". 1 1 2 3 5 8 13")

add_executable(stationaryorbit.core.test.constprogression test.constprogression.cpp)
target_link_libraries(stationaryorbit.core.test.constprogression stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.constprogression 1 ". 1 2 3 4 5 6 7 8 9 10")
do_test_pattern(stationaryorbit.core.test.constprogression 2 ". 10")

add_executable(stationaryorbit.core.test.crc test.crc.cpp)
target_link_libraries(stationaryorbit.core.test.crc stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.crc 1 "CRC32Table.0. . 0")
do_test_pattern(stationaryorbit.core.test.crc 2 "CRC32Table.1. . 77073096")
do_test_pattern(stationaryorbit.core.test.crc 3 "CRC32Table.2. . ee0e612c")
do_test_pattern(stationaryorbit.core.test.crc 4 "CRC32Table.3. . 990951ba")
do_test_pattern(stationaryorbit.core.test.crc 5 "CRC32Table.4. . 76dc419")
do_test_pattern(stationaryorbit.core.test.crc 6 "CRC32Table.5. . 706af48f")
do_test_pattern(stationaryorbit.core.test.crc 7 "CRC32Table.6. . e963a535")
do_test_pattern(stationaryorbit.core.test.crc 8 "CRC32Table.7. . 9e6495a3")
do_test_pattern(stationaryorbit.core.test.crc 9 "CRC32Table.8. . edb8832")
do_test_pattern(stationaryorbit.core.test.crc 10 "CRC32Table.9. . 79dcb8a4")
do_test_pattern(stationaryorbit.core.test.crc 11 "CRC32Table.10. . e0d5e91e")
do_test_pattern(stationaryorbit.core.test.crc 12 "CRC32Table.11. . 97d2d988")
do_test_pattern(stationaryorbit.core.test.crc 13 "CRC32Table.12. . 9b64c2b")
do_test_pattern(stationaryorbit.core.test.crc 14 "CRC32Table.13. . 7eb17cbd")
do_test_pattern(stationaryorbit.core.test.crc 15 "CRC32Table.14. . e7b82d07")
do_test_pattern(stationaryorbit.core.test.crc 16 "CRC32Table.15. . 90bf1d91")
do_test_pattern(stationaryorbit.core.test.crc 17 "CRC32Table.16. . 1db71064")
do_test_pattern(stationaryorbit.core.test.crc 18 "CRC32Table.17. . 6ab020f2")
do_test_pattern(stationaryorbit.core.test.crc 19 "CRC32Table.18. . f3b97148")
do_test_pattern(stationaryorbit.core.test.crc 20 "CRC32Table.19. . 84be41de")
do_test_pattern(stationaryorbit.core.test.crc 21 "CRC32Table.20. . 1adad47d")
do_test_pattern(stationaryorbit.core.test.crc 22 "CRC32Table.21. . 6ddde4eb")
do_test_pattern(stationaryorbit.core.test.crc 23 "CRC32Table.22. . f4d4b551")
do_test_pattern(stationaryorbit.core.test.crc 24 "CRC32Table.23. . 83d385c7")
do_test_pattern(stationaryorbit.core.test.crc 25 "CRC32Table.24. . 136c9856")
do_test_pattern(stationaryorbit.core.test.crc 26 "CRC32Table.25. . 646ba8c0")
do_test_pattern(stationaryorbit.core.test.crc 27 "CRC32Table.26. . fd62f97a")
do_test_pattern(stationaryorbit.core.test.crc 28 "CRC32Table.27. . 8a65c9ec")
do_test_pattern(stationaryorbit.core.test.crc 29 "CRC32Table.28. . 14015c4f")
do_test_pattern(stationaryorbit.core.test.crc 30 "CRC32Table.29. . 63066cd9")
do_test_pattern(stationaryorbit.core.test.crc 31 "CRC32Table.30. . fa0f3d63")
do_test_pattern(stationaryorbit.core.test.crc 32 "CRC32Table.31. . 8d080df5")
do_test_pattern(stationaryorbit.core.test.crc 33 "CRC32Table.32. . 3b6e20c8")
do_test_pattern(stationaryorbit.core.test.crc 34 "CRC32Table.33. . 4c69105e")
do_test_pattern(stationaryorbit.core.test.crc 35 "CRC32Table.34. . d56041e4")
do_test_pattern(stationaryorbit.core.test.crc 36 "CRC32Table.35. . a2677172")
do_test_pattern(stationaryorbit.core.test.crc 37 "CRC32Table.36. . 3c03e4d1")
do_test_pattern(stationaryorbit.core.test.crc 38 "CRC32Table.37. . 4b04d447")
do_test_pattern(stationaryorbit.core.test.crc 39 "CRC32Table.38. . d20d85fd")
do_test_pattern(stationaryorbit.core.test.crc 40 "CRC32Table.39. . a50ab56b")
do_test_pattern(stationaryorbit.core.test.crc 41 "CRC32Table.40. . 35b5a8fa")
do_test_pattern(stationaryorbit.core.test.crc 42 "CRC32Table.41. . 42b2986c")
do_test_pattern(stationaryorbit.core.test.crc 43 "CRC32Table.42. . dbbbc9d6")
do_test_pattern(stationaryorbit.core.test.crc 44 "CRC32Table.43. . acbcf940")
do_test_pattern(stationaryorbit.core.test.crc 45 "CRC32Table.44. . 32d86ce3")
do_test_pattern(stationaryorbit.core.test.crc 46 "CRC32Table.45. . 45df5c75")
do_test_pattern(stationaryorbit.core.test.crc 47 "CRC32Table.46. . dcd60dcf")
do_test_pattern(stationaryorbit.core.test.crc 48 "CRC32Table.47. . abd13d59")
do_test_pattern(stationaryorbit.core.test.crc 49 "CRC32Table.48. . 26d930ac")
do_test_pattern(stationaryorbit.core.test.crc 50 "CRC32Table.49. . 51de003a")
do_test_pattern(stationaryorbit.core.test.crc 51 "CRC32Table.50. . c8d75180")
do_test_pattern(stationaryorbit.core.test.crc 52 "CRC32Table.51. . bfd06116")
do_test_pattern(stationaryorbit.core.test.crc 53 "CRC32Table.52. . 21b4f4b5")
do_test_pattern(stationaryorbit.core.test.crc 54 "CRC32Table.53. . 56b3c423")
do_test_pattern(stationaryorbit.core.test.crc 55 "CRC32Table.54. . cfba9599")
do_test_pattern(stationaryorbit.core.test.crc 56 "CRC32Table.55. . b8bda50f")
do_test_pattern(stationaryorbit.core.test.crc 57 "CRC32Table.56. . 2802b89e")
do_test_pattern(stationaryorbit.core.test.crc 58 "CRC32Table.57. . 5f058808")
do_test_pattern(stationaryorbit.core.test.crc 59 "CRC32Table.58. . c60cd9b2")
do_test_pattern(stationaryorbit.core.test.crc 60 "CRC32Table.59. . b10be924")
do_test_pattern(stationaryorbit.core.test.crc 61 "CRC32Table.60. . 2f6f7c87")
do_test_pattern(stationaryorbit.core.test.crc 62 "CRC32Table.61. . 58684c11")
do_test_pattern(stationaryorbit.core.test.crc 63 "CRC32Table.62. . c1611dab")
do_test_pattern(stationaryorbit.core.test.crc 64 "CRC32Table.63. . b6662d3d")
do_test_pattern(stationaryorbit.core.test.crc 65 "CRC32Table.64. . 76dc4190")
do_test_pattern(stationaryorbit.core.test.crc 66 "CRC32Table.65. . 1db7106")
do_test_pattern(stationaryorbit.core.test.crc 67 "CRC32Table.66. . 98d220bc")
do_test_pattern(stationaryorbit.core.test.crc 68 "CRC32Table.67. . efd5102a")
do_test_pattern(stationaryorbit.core.test.crc 69 "CRC32Table.68. . 71b18589")
do_test_pattern(stationaryorbit.core.test.crc 70 "CRC32Table.69. . 6b6b51f")
do_test_pattern(stationaryorbit.core.test.crc 71 "CRC32Table.70. . 9fbfe4a5")
do_test_pattern(stationaryorbit.core.test.crc 72 "CRC32Table.71. . e8b8d433")
do_test_pattern(stationaryorbit.core.test.crc 73 "CRC32Table.72. . 7807c9a2")
do_test_pattern(stationaryorbit.core.test.crc 74 "CRC32Table.73. . f00f934")
do_test_pattern(stationaryorbit.core.test.crc 75 "CRC32Table.74. . 9609a88e")
do_test_pattern(stationaryorbit.core.test.crc 76 "CRC32Table.75. . e10e9818")
do_test_pattern(stationaryorbit.core.test.crc 77 "CRC32Table.76. . 7f6a0dbb")
do_test_pattern(stationaryorbit.core.test.crc 78 "CRC32Table.77. . 86d3d2d")
do_test_pattern(stationaryorbit.core.test.crc 79 "CRC32Table.78. . 91646c97")
do_test_pattern(stationaryorbit.core.test.crc 80 "CRC32Table.79. . e6635c01")
do_test_pattern(stationaryorbit.core.test.crc 81 "CRC32Table.80. . 6b6b51f4")
do_test_pattern(stationaryorbit.core.test.crc 82 "CRC32Table.81. . 1c6c6162")
do_test_pattern(stationaryorbit.core.test.crc 83 "CRC32Table.82. . 856530d8")
do_test_pattern(stationaryorbit.core.test.crc 84 "CRC32Table.83. . f262004e")
do_test_pattern(stationaryorbit.core.test.crc 85 "CRC32Table.84. . 6c0695ed")
do_test_pattern(stationaryorbit.core.test.crc 86 "CRC32Table.85. . 1b01a57b")
do_test_pattern(stationaryorbit.core.test.crc 87 "CRC32Table.86. . 8208f4c1")
do_test_pattern(stationaryorbit.core.test.crc 88 "CRC32Table.87. . f50fc457")
do_test_pattern(stationaryorbit.core.test.crc 89 "CRC32Table.88. . 65b0d9c6")
do_test_pattern(stationaryorbit.core.test.crc 90 "CRC32Table.89. . 12b7e950")
do_test_pattern(stationaryorbit.core.test.crc 91 "CRC32Table.90. . 8bbeb8ea")
do_test_pattern(stationaryorbit.core.test.crc 92 "CRC32Table.91. . fcb9887c")
do_test_pattern(stationaryorbit.core.test.crc 93 "CRC32Table.92. . 62dd1ddf")
do_test_pattern(stationaryorbit.core.test.crc 94 "CRC32Table.93. . 15da2d49")
do_test_pattern(stationaryorbit.core.test.crc 95 "CRC32Table.94. . 8cd37cf3")
do_test_pattern(stationaryorbit.core.test.crc 96 "CRC32Table.95. . fbd44c65")
do_test_pattern(stationaryorbit.core.test.crc 97 "CRC32Table.96. . 4db26158")
do_test_pattern(stationaryorbit.core.test.crc 98 "CRC32Table.97. . 3ab551ce")
do_test_pattern(stationaryorbit.core.test.crc 99 "CRC32Table.98. . a3bc0074")
do_test_pattern(stationaryorbit.core.test.crc 100 "CRC32Table.99. . d4bb30e2")
do_test_pattern(stationaryorbit.core.test.crc 101 "CRC32Table.100. . 4adfa541")
do_test_pattern(stationaryorbit.core.test.crc 102 "CRC32Table.101. . 3dd895d7")
do_test_pattern(stationaryorbit.core.test.crc 103 "CRC32Table.102. . a4d1c46d")
do_test_pattern(stationaryorbit.core.test.crc 104 "CRC32Table.103. . d3d6f4fb")
do_test_pattern(stationaryorbit.core.test.crc 105 "CRC32Table.104. . 4369e96a")
do_test_pattern(stationaryorbit.core.test.crc 106 "CRC32Table.105. . 346ed9fc")
do_test_pattern(stationaryorbit.core.test.crc 107 "CRC32Table.106. . ad678846")
do_test_pattern(stationaryorbit.core.test.crc 108 "CRC32Table.107. . da60b8d0")
do_test_pattern(stationaryorbit.core.test.crc 109 "CRC32Table.108. . 44042d73")
do_test_pattern(stationaryorbit.core.test.crc 110 "CRC32Table.109. . 33031de5")
do_test_pattern(stationaryorbit.core.test.crc 111 "CRC32Table.110. . aa0a4c5f")
do_test_pattern(stationaryorbit.core.test.crc 112 "CRC32Table.111. . dd0d7cc9")
do_test_pattern(stationaryorbit.core.test.crc 113 "CRC32Table.112. . 5005713c")
do_test_pattern(stationaryorbit.core.test.crc 114 "CRC32Table.113. . 270241aa")
do_test_pattern(stationaryorbit.core.test.crc 115 "CRC32Table.114. . be0b1010")
do_test_pattern(stationaryorbit.core.test.crc 116 "CRC32Table.115. . c90c2086")
do_test_pattern(stationaryorbit.core.test.crc 117 "CRC32Table.116. . 5768b525")
do_test_pattern(stationaryorbit.core.test.crc 118 "CRC32Table.117. . 206f85b3")
do_test_pattern(stationaryorbit.core.test.crc 119 "CRC32Table.118. . b966d409")
do_test_pattern(stationaryorbit.core.test.crc 120 "CRC32Table.119. . ce61e49f")
do_test_pattern(stationaryorbit.core.test.crc 121 "CRC32Table.120. . 5edef90e")
do_test_pattern(stationaryorbit.core.test.crc 122 "CRC32Table.121. . 29d9c998")
do_test_pattern(stationaryorbit.core.test.crc 123 "CRC32Table.122. . b0d09822")
do_test_pattern(stationaryorbit.core.test.crc 124 "CRC32Table.123. . c7d7a8b4")
do_test_pattern(stationaryorbit.core.test.crc 125 "CRC32Table.124. . 59b33d17")
do_test_pattern(stationaryorbit.core.test.crc 126 "CRC32Table.125. . 2eb40d81")
do_test_pattern(stationaryorbit.core.test.crc 127 "CRC32Table.126. . b7bd5c3b")
do_test_pattern(stationaryorbit.core.test.crc 128 "CRC32Table.127. . c0ba6cad")
do_test_pattern(stationaryorbit.core.test.crc 129 "CRC32Table.128. . edb88320")
do_test_pattern(stationaryorbit.core.test.crc 130 "CRC32Table.129. . 9abfb3b6")
do_test_pattern(stationaryorbit.core.test.crc 131 "CRC32Table.130. . 3b6e20c")
do_test_pattern(stationaryorbit.core.test.crc 132 "CRC32Table.131. . 74b1d29a")
do_test_pattern(stationaryorbit.core.test.crc 133 "CRC32Table.132. . ead54739")
do_test_pattern(stationaryorbit.core.test.crc 134 "CRC32Table.133. . 9dd277af")
do_test_pattern(stationaryorbit.core.test.crc 135 "CRC32Table.134. . 4db2615")
do_test_pattern(stationaryorbit.core.test.crc 136 "CRC32Table.135. . 73dc1683")
do_test_pattern(stationaryorbit.core.test.crc 137 "CRC32Table.136. . e3630b12")
do_test_pattern(stationaryorbit.core.test.crc 138 "CRC32Table.137. . 94643b84")
do_test_pattern(stationaryorbit.core.test.crc 139 "CRC32Table.138. . d6d6a3e")
do_test_pattern(stationaryorbit.core.test.crc 140 "CRC32Table.139. . 7a6a5aa8")
do_test_pattern(stationaryorbit.core.test.crc 141 "CRC32Table.140. . e40ecf0b")
do_test_pattern(stationaryorbit.core.test.crc 142 "CRC32Table.141. . 9309ff9d")
do_test_pattern(stationaryorbit.core.test.crc 143 "CRC32Table.142. . a00ae27")
do_test_pattern(stationaryorbit.core.test.crc 144 "CRC32Table.143. . 7d079eb1")
do_test_pattern(stationaryorbit.core.test.crc 145 "CRC32Table.144. . f00f9344")
do_test_pattern(stationaryorbit.core.test.crc 146 "CRC32Table.145. . 8708a3d2")
do_test_pattern(stationaryorbit.core.test.crc 147 "CRC32Table.146. . 1e01f268")
do_test_pattern(stationaryorbit.core.test.crc 148 "CRC32Table.147. . 6906c2fe")
do_test_pattern(stationaryorbit.core.test.crc 149 "CRC32Table.148. . f762575d")
do_test_pattern(stationaryorbit.core.test.crc 150 "CRC32Table.149. . 806567cb")
do_test_pattern(stationaryorbit.core.test.crc 151 "CRC32Table.150. . 196c3671")
do_test_pattern(stationaryorbit.core.test.crc 152 "CRC32Table.151. . 6e6b06e7")
do_test_pattern(stationaryorbit.core.test.crc 153 "CRC32Table.152. . fed41b76")
do_test_pattern(stationaryorbit.core.test.crc 154 "CRC32Table.153. . 89d32be0")
do_test_pattern(stationaryorbit.core.test.crc 155 "CRC32Table.154. . 10da7a5a")
do_test_pattern(stationaryorbit.core.test.crc 156 "CRC32Table.155. . 67dd4acc")
do_test_pattern(stationaryorbit.core.test.crc 157 "CRC32Table.156. . f9b9df6f")
do_test_pattern(stationaryorbit.core.test.crc 158 "CRC32Table.157. . 8ebeeff9")
do_test_pattern(stationaryorbit.core.test.crc 159 "CRC32Table.158. . 17b7be43")
do_test_pattern(stationaryorbit.core.test.crc 160 "CRC32Table.159. . 60b08ed5")
do_test_pattern(stationaryorbit.core.test.crc 161 "CRC32Table.160. . d6d6a3e8")
do_test_pattern(stationaryorbit.core.test.crc 162 "CRC32Table.161. . a1d1937e")
do_test_pattern(stationaryorbit.core.test.crc 163 "CRC32Table.162. . 38d8c2c4")
do_test_pattern(stationaryorbit.core.test.crc 164 "CRC32Table.163. . 4fdff252")
do_test_pattern(stationaryorbit.core.test.crc 165 "CRC32Table.164. . d1bb67f1")
do_test_pattern(stationaryorbit.core.test.crc 166 "CRC32Table.165. . a6bc5767")
do_test_pattern(stationaryorbit.core.test.crc 167 "CRC32Table.166. . 3fb506dd")
do_test_pattern(stationaryorbit.core.test.crc 168 "CRC32Table.167. . 48b2364b")
do_test_pattern(stationaryorbit.core.test.crc 169 "CRC32Table.168. . d80d2bda")
do_test_pattern(stationaryorbit.core.test.crc 170 "CRC32Table.169. . af0a1b4c")
do_test_pattern(stationaryorbit.core.test.crc 171 "CRC32Table.170. . 36034af6")
do_test_pattern(stationaryorbit.core.test.crc 172 "CRC32Table.171. . 41047a60")
do_test_pattern(stationaryorbit.core.test.crc 173 "CRC32Table.172. . df60efc3")
do_test_pattern(stationaryorbit.core.test.crc 174 "CRC32Table.173. . a867df55")
do_test_pattern(stationaryorbit.core.test.crc 175 "CRC32Table.174. . 316e8eef")
do_test_pattern(stationaryorbit.core.test.crc 176 "CRC32Table.175. . 4669be79")
do_test_pattern(stationaryorbit.core.test.crc 177 "CRC32Table.176. . cb61b38c")
do_test_pattern(stationaryorbit.core.test.crc 178 "CRC32Table.177. . bc66831a")
do_test_pattern(stationaryorbit.core.test.crc 179 "CRC32Table.178. . 256fd2a0")
do_test_pattern(stationaryorbit.core.test.crc 180 "CRC32Table.179. . 5268e236")
do_test_pattern(stationaryorbit.core.test.crc 181 "CRC32Table.180. . cc0c7795")
do_test_pattern(stationaryorbit.core.test.crc 182 "CRC32Table.181. . bb0b4703")
do_test_pattern(stationaryorbit.core.test.crc 183 "CRC32Table.182. . 220216b9")
do_test_pattern(stationaryorbit.core.test.crc 184 "CRC32Table.183. . 5505262f")
do_test_pattern(stationaryorbit.core.test.crc 185 "CRC32Table.184. . c5ba3bbe")
do_test_pattern(stationaryorbit.core.test.crc 186 "CRC32Table.185. . b2bd0b28")
do_test_pattern(stationaryorbit.core.test.crc 187 "CRC32Table.186. . 2bb45a92")
do_test_pattern(stationaryorbit.core.test.crc 188 "CRC32Table.187. . 5cb36a04")
do_test_pattern(stationaryorbit.core.test.crc 189 "CRC32Table.188. . c2d7ffa7")
do_test_pattern(stationaryorbit.core.test.crc 190 "CRC32Table.189. . b5d0cf31")
do_test_pattern(stationaryorbit.core.test.crc 191 "CRC32Table.190. . 2cd99e8b")
do_test_pattern(stationaryorbit.core.test.crc 192 "CRC32Table.191. . 5bdeae1d")
do_test_pattern(stationaryorbit.core.test.crc 193 "CRC32Table.192. . 9b64c2b0")
do_test_pattern(stationaryorbit.core.test.crc 194 "CRC32Table.193. . ec63f226")
do_test_pattern(stationaryorbit.core.test.crc 195 "CRC32Table.194. . 756aa39c")
do_test_pattern(stationaryorbit.core.test.crc 196 "CRC32Table.195. . 26d930a")
do_test_pattern(stationaryorbit.core.test.crc 197 "CRC32Table.196. . 9c0906a9")
do_test_pattern(stationaryorbit.core.test.crc 198 "CRC32Table.197. . eb0e363f")
do_test_pattern(stationaryorbit.core.test.crc 199 "CRC32Table.198. . 72076785")
do_test_pattern(stationaryorbit.core.test.crc 200 "CRC32Table.199. . 5005713")
do_test_pattern(stationaryorbit.core.test.crc 201 "CRC32Table.200. . 95bf4a82")
do_test_pattern(stationaryorbit.core.test.crc 202 "CRC32Table.201. . e2b87a14")
do_test_pattern(stationaryorbit.core.test.crc 203 "CRC32Table.202. . 7bb12bae")
do_test_pattern(stationaryorbit.core.test.crc 204 "CRC32Table.203. . cb61b38")
do_test_pattern(stationaryorbit.core.test.crc 205 "CRC32Table.204. . 92d28e9b")
do_test_pattern(stationaryorbit.core.test.crc 206 "CRC32Table.205. . e5d5be0d")
do_test_pattern(stationaryorbit.core.test.crc 207 "CRC32Table.206. . 7cdcefb7")
do_test_pattern(stationaryorbit.core.test.crc 208 "CRC32Table.207. . bdbdf21")
do_test_pattern(stationaryorbit.core.test.crc 209 "CRC32Table.208. . 86d3d2d4")
do_test_pattern(stationaryorbit.core.test.crc 210 "CRC32Table.209. . f1d4e242")
do_test_pattern(stationaryorbit.core.test.crc 211 "CRC32Table.210. . 68ddb3f8")
do_test_pattern(stationaryorbit.core.test.crc 212 "CRC32Table.211. . 1fda836e")
do_test_pattern(stationaryorbit.core.test.crc 213 "CRC32Table.212. . 81be16cd")
do_test_pattern(stationaryorbit.core.test.crc 214 "CRC32Table.213. . f6b9265b")
do_test_pattern(stationaryorbit.core.test.crc 215 "CRC32Table.214. . 6fb077e1")
do_test_pattern(stationaryorbit.core.test.crc 216 "CRC32Table.215. . 18b74777")
do_test_pattern(stationaryorbit.core.test.crc 217 "CRC32Table.216. . 88085ae6")
do_test_pattern(stationaryorbit.core.test.crc 218 "CRC32Table.217. . ff0f6a70")
do_test_pattern(stationaryorbit.core.test.crc 219 "CRC32Table.218. . 66063bca")
do_test_pattern(stationaryorbit.core.test.crc 220 "CRC32Table.219. . 11010b5c")
do_test_pattern(stationaryorbit.core.test.crc 221 "CRC32Table.220. . 8f659eff")
do_test_pattern(stationaryorbit.core.test.crc 222 "CRC32Table.221. . f862ae69")
do_test_pattern(stationaryorbit.core.test.crc 223 "CRC32Table.222. . 616bffd3")
do_test_pattern(stationaryorbit.core.test.crc 224 "CRC32Table.223. . 166ccf45")
do_test_pattern(stationaryorbit.core.test.crc 225 "CRC32Table.224. . a00ae278")
do_test_pattern(stationaryorbit.core.test.crc 226 "CRC32Table.225. . d70dd2ee")
do_test_pattern(stationaryorbit.core.test.crc 227 "CRC32Table.226. . 4e048354")
do_test_pattern(stationaryorbit.core.test.crc 228 "CRC32Table.227. . 3903b3c2")
do_test_pattern(stationaryorbit.core.test.crc 229 "CRC32Table.228. . a7672661")
do_test_pattern(stationaryorbit.core.test.crc 230 "CRC32Table.229. . d06016f7")
do_test_pattern(stationaryorbit.core.test.crc 231 "CRC32Table.230. . 4969474d")
do_test_pattern(stationaryorbit.core.test.crc 232 "CRC32Table.231. . 3e6e77db")
do_test_pattern(stationaryorbit.core.test.crc 233 "CRC32Table.232. . aed16a4a")
do_test_pattern(stationaryorbit.core.test.crc 234 "CRC32Table.233. . d9d65adc")
do_test_pattern(stationaryorbit.core.test.crc 235 "CRC32Table.234. . 40df0b66")
do_test_pattern(stationaryorbit.core.test.crc 236 "CRC32Table.235. . 37d83bf0")
do_test_pattern(stationaryorbit.core.test.crc 237 "CRC32Table.236. . a9bcae53")
do_test_pattern(stationaryorbit.core.test.crc 238 "CRC32Table.237. . debb9ec5")
do_test_pattern(stationaryorbit.core.test.crc 239 "CRC32Table.238. . 47b2cf7f")
do_test_pattern(stationaryorbit.core.test.crc 240 "CRC32Table.239. . 30b5ffe9")
do_test_pattern(stationaryorbit.core.test.crc 241 "CRC32Table.240. . bdbdf21c")
do_test_pattern(stationaryorbit.core.test.crc 242 "CRC32Table.241. . cabac28a")
do_test_pattern(stationaryorbit.core.test.crc 243 "CRC32Table.242. . 53b39330")
do_test_pattern(stationaryorbit.core.test.crc 244 "CRC32Table.243. . 24b4a3a6")
do_test_pattern(stationaryorbit.core.test.crc 245 "CRC32Table.244. . bad03605")
do_test_pattern(stationaryorbit.core.test.crc 246 "CRC32Table.245. . cdd70693")
do_test_pattern(stationaryorbit.core.test.crc 247 "CRC32Table.246. . 54de5729")
do_test_pattern(stationaryorbit.core.test.crc 248 "CRC32Table.247. . 23d967bf")
do_test_pattern(stationaryorbit.core.test.crc 249 "CRC32Table.248. . b3667a2e")
do_test_pattern(stationaryorbit.core.test.crc 250 "CRC32Table.249. . c4614ab8")
do_test_pattern(stationaryorbit.core.test.crc 251 "CRC32Table.250. . 5d681b02")
do_test_pattern(stationaryorbit.core.test.crc 252 "CRC32Table.251. . 2a6f2b94")
do_test_pattern(stationaryorbit.core.test.crc 253 "CRC32Table.252. . b40bbe37")
do_test_pattern(stationaryorbit.core.test.crc 254 "CRC32Table.253. . c30c8ea1")
do_test_pattern(stationaryorbit.core.test.crc 255 "CRC32Table.254. . 5a05df1b")
do_test_pattern(stationaryorbit.core.test.crc 256 "CRC32Table.255. . 2d02ef8d")
do_test_pattern(stationaryorbit.core.test.crc 257 "CRC32.test_pattern_0. . 0")
do_test_pattern(stationaryorbit.core.test.crc 258 "CRC32.test_pattern_1. . e8b7be43")
do_test_pattern(stationaryorbit.core.test.crc 259 "CRC32.test_pattern_2. . 352441c2")
do_test_pattern(stationaryorbit.core.test.crc 260 "CRC32.test_pattern_3. . 20159d7f")
do_test_pattern(stationaryorbit.core.test.crc 261 "CRC32.test_pattern_4. . 4c2750bd")
do_test_pattern(stationaryorbit.core.test.crc 262 "CRC32.test_pattern_5. . 1fc2e6d2")
do_test_pattern(stationaryorbit.core.test.crc 263 "CRC32.test_pattern_6. . 7ca94a72")
do_test_pattern(stationaryorbit.core.test.crc 264 "CRC32.test_pattern_7. . 519025e9")
do_test_pattern(stationaryorbit.core.test.crc 265 "CRC32.test_pattern_8. . dfae50e1")
do_test_pattern(stationaryorbit.core.test.crc 266 "CRC32.test_pattern_9. . 36c33ba7")
do_test_pattern(stationaryorbit.core.test.crc 267 "CRC32.test_pattern_10. . d45e77f3")

add_executable(stationaryorbit.core.test.endian test.endian.cpp)
target_link_libraries(stationaryorbit.core.test.endian stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.endian 1 "LE->BE . DEADBEEF")
do_test_pattern(stationaryorbit.core.test.endian 2 "BE->LE . EFBEADDE")
do_test_nofail(stationaryorbit.core.test.endian 3)
do_test_nofail(stationaryorbit.core.test.endian 4)
do_test_pattern(stationaryorbit.core.test.endian 5 "data.. . EFBEADDE")
do_test_pattern(stationaryorbit.core.test.endian 6 "data.. . DEADBEEF")

add_executable(stationaryorbit.core.test.delegate test.delegate.cpp)
target_link_libraries(stationaryorbit.core.test.delegate stationaryorbit.core)
do_test_nofail(stationaryorbit.core.test.delegate 1)

add_executable(stationaryorbit.core.test.disperse test.disperse.cpp)
target_link_libraries(stationaryorbit.core.test.disperse stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.disperse 1 ". 12345678")
do_test_pattern(stationaryorbit.core.test.disperse 2 ". 1431655765")

add_executable(stationaryorbit.core.test.fixedpoint test.fixedpoint.cpp)
target_link_libraries(stationaryorbit.core.test.fixedpoint stationaryorbit.core)
do_test_nofail(stationaryorbit.core.test.fixedpoint 1)
do_test_nofail(stationaryorbit.core.test.fixedpoint 2)
do_test_nofail(stationaryorbit.core.test.fixedpoint 3)
do_test_nofail(stationaryorbit.core.test.fixedpoint 4)
do_test_nofail(stationaryorbit.core.test.fixedpoint 5)
do_test_nofail(stationaryorbit.core.test.fixedpoint 6)
do_test_nofail(stationaryorbit.core.test.fixedpoint 7)
do_test_nofail(stationaryorbit.core.test.fixedpoint 8)
do_test_nofail(stationaryorbit.core.test.fixedpoint 9)
do_test_nofail(stationaryorbit.core.test.fixedpoint 10)
do_test_nofail(stationaryorbit.core.test.fixedpoint 11)
do_test_nofail(stationaryorbit.core.test.fixedpoint 12)
do_test_nofail(stationaryorbit.core.test.fixedpoint 13)
do_test_nofail(stationaryorbit.core.test.fixedpoint 14)
do_test_nofail(stationaryorbit.core.test.fixedpoint 15)
do_test_pattern(stationaryorbit.core.test.fixedpoint 16 "255\.996")
do_test_pattern(stationaryorbit.core.test.fixedpoint 17 "0")
do_test_pattern(stationaryorbit.core.test.fixedpoint 18 "0\.00390625")

add_executable(stationaryorbit.core.test.halfangleformula test.halfangleformula.cpp)
target_link_libraries(stationaryorbit.core.test.halfangleformula stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.halfangleformula 1 "sin .
1
0\.707106[0-9]*
0\.382683[0-9]*
0\.195090[0-9]*
0\.0980171[0-9]*
0\.0490676[0-9]*
0\.0245412[0-9]*
0\.0122715[0-9]*
0\.00613588[0-9]*")
do_test_pattern(stationaryorbit.core.test.halfangleformula 2 "cos .
0
0\.707106[0-9]*
0\.923879[0-9]*
0\.980785[0-9]*
0\.995184[0-9]*
0\.998795[0-9]*
0\.999698[0-9]*
0\.999924[0-9]*
0\.999981[0-9]*")

add_executable(stationaryorbit.core.test.integer test.integer.cpp)
target_link_libraries(stationaryorbit.core.test.integer stationaryorbit.core)
do_test_nofail(stationaryorbit.core.test.integer 1)
do_test_nofail(stationaryorbit.core.test.integer 2)
do_test_nofail(stationaryorbit.core.test.integer 3)
do_test_nofail(stationaryorbit.core.test.integer 4)
do_test_nofail(stationaryorbit.core.test.integer 5)
do_test_nofail(stationaryorbit.core.test.integer 6)
do_test_nofail(stationaryorbit.core.test.integer 7)
do_test_nofail(stationaryorbit.core.test.integer 8)
do_test_nofail(stationaryorbit.core.test.integer 9)
do_test_nofail(stationaryorbit.core.test.integer 10)
do_test_nofail(stationaryorbit.core.test.integer 11)
do_test_nofail(stationaryorbit.core.test.integer 12)
do_test_nofail(stationaryorbit.core.test.integer 13)
do_test_nofail(stationaryorbit.core.test.integer 14)
do_test_nofail(stationaryorbit.core.test.integer 15)
do_test_nofail(stationaryorbit.core.test.integer 16)
do_test_nofail(stationaryorbit.core.test.integer 17)
do_test_nofail(stationaryorbit.core.test.integer 18)
do_test_nofail(stationaryorbit.core.test.integer 19)
do_test_nofail(stationaryorbit.core.test.integer 20)
do_test_nofail(stationaryorbit.core.test.integer 21)
do_test_nofail(stationaryorbit.core.test.integer 22)
do_test_nofail(stationaryorbit.core.test.integer 23)

add_executable(stationaryorbit.core.test.iterator test.iterator.cpp)
target_link_libraries(stationaryorbit.core.test.iterator stationaryorbit.core)
do_test_nofail(stationaryorbit.core.test.iterator 1)
do_test_nofail(stationaryorbit.core.test.iterator 2)
do_test_nofail(stationaryorbit.core.test.iterator 3)
do_test_nofail(stationaryorbit.core.test.iterator 4)
do_test_nofail(stationaryorbit.core.test.iterator 5)
do_test_nofail(stationaryorbit.core.test.iterator 6)
do_test_pattern(stationaryorbit.core.test.iterator 7 "1 2 3 4 5")
do_test_pattern(stationaryorbit.core.test.iterator 8 "5 4 3 2 1")
do_test_pattern(stationaryorbit.core.test.iterator 9 "0 1 2 3 4")

add_executable(stationaryorbit.core.test.logic test.logic.cpp)
target_link_libraries(stationaryorbit.core.test.logic stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.logic 1 "true")
do_test_pattern(stationaryorbit.core.test.logic 2 "false")
do_test_pattern(stationaryorbit.core.test.logic 3 "indefinited")
do_test_pattern(stationaryorbit.core.test.logic 4 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 5 "true")
do_test_pattern(stationaryorbit.core.test.logic 6 "true")
do_test_pattern(stationaryorbit.core.test.logic 7 "true")
do_test_pattern(stationaryorbit.core.test.logic 8 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 9 "true")
do_test_pattern(stationaryorbit.core.test.logic 10 "false")
do_test_pattern(stationaryorbit.core.test.logic 11 "indefinited")
do_test_pattern(stationaryorbit.core.test.logic 12 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 13 "true")
do_test_pattern(stationaryorbit.core.test.logic 14 "indefinited")
do_test_pattern(stationaryorbit.core.test.logic 15 "indefinited")
do_test_pattern(stationaryorbit.core.test.logic 16 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 17 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 18 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 19 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 20 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 21 "true")
do_test_pattern(stationaryorbit.core.test.logic 22 "false")
do_test_pattern(stationaryorbit.core.test.logic 23 "indefinited")
do_test_pattern(stationaryorbit.core.test.logic 24 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 25 "false")
do_test_pattern(stationaryorbit.core.test.logic 26 "false")
do_test_pattern(stationaryorbit.core.test.logic 27 "false")
do_test_pattern(stationaryorbit.core.test.logic 28 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 29 "indefinited")
do_test_pattern(stationaryorbit.core.test.logic 30 "false")
do_test_pattern(stationaryorbit.core.test.logic 31 "indefinited")
do_test_pattern(stationaryorbit.core.test.logic 32 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 33 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 34 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 35 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 36 "undefined")
do_test_pattern(stationaryorbit.core.test.logic 37 "false")
do_test_pattern(stationaryorbit.core.test.logic 38 "true")
do_test_pattern(stationaryorbit.core.test.logic 39 "indefinited")
do_test_pattern(stationaryorbit.core.test.logic 40 "undefined")
do_test_nofail(stationaryorbit.core.test.logic 41)
do_test_nofail(stationaryorbit.core.test.logic 42)
do_test_nofail(stationaryorbit.core.test.logic 43)
do_test_nofail(stationaryorbit.core.test.logic 44)

add_executable(stationaryorbit.core.test.machinprogression test.machinprogression.cpp)
target_link_libraries(stationaryorbit.core.test.machinprogression stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.machinprogression 1 "float.pi. . 3\.14159[23]")
do_test_pattern(stationaryorbit.core.test.machinprogression 2 "double.pi. . 3\.14159265358979")

add_executable(stationaryorbit.core.test.md5 test.md5.cpp)
target_link_libraries(stationaryorbit.core.test.md5 stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.md5 1 "MD5Table.1. . d76aa478")
do_test_pattern(stationaryorbit.core.test.md5 2 "MD5Table.2. . e8c7b756")
do_test_pattern(stationaryorbit.core.test.md5 3 "MD5Table.3. . 242070db")
do_test_pattern(stationaryorbit.core.test.md5 4 "MD5Table.4. . c1bdceee")
do_test_pattern(stationaryorbit.core.test.md5 5 "MD5Table.5. . f57c0faf")
do_test_pattern(stationaryorbit.core.test.md5 6 "MD5Table.6. . 4787c62a")
do_test_pattern(stationaryorbit.core.test.md5 7 "MD5Table.7. . a8304613")
do_test_pattern(stationaryorbit.core.test.md5 8 "MD5Table.8. . fd469501")
do_test_pattern(stationaryorbit.core.test.md5 9 "MD5Table.9. . 698098d8")
do_test_pattern(stationaryorbit.core.test.md5 10 "MD5Table.10. . 8b44f7af")
do_test_pattern(stationaryorbit.core.test.md5 11 "MD5Table.11. . ffff5bb1")
do_test_pattern(stationaryorbit.core.test.md5 12 "MD5Table.12. . 895cd7be")
do_test_pattern(stationaryorbit.core.test.md5 13 "MD5Table.13. . 6b901122")
do_test_pattern(stationaryorbit.core.test.md5 14 "MD5Table.14. . fd987193")
do_test_pattern(stationaryorbit.core.test.md5 15 "MD5Table.15. . a679438e")
do_test_pattern(stationaryorbit.core.test.md5 16 "MD5Table.16. . 49b40821")
do_test_pattern(stationaryorbit.core.test.md5 17 "MD5Table.17. . f61e2562")
do_test_pattern(stationaryorbit.core.test.md5 18 "MD5Table.18. . c040b340")
do_test_pattern(stationaryorbit.core.test.md5 19 "MD5Table.19. . 265e5a51")
do_test_pattern(stationaryorbit.core.test.md5 20 "MD5Table.20. . e9b6c7aa")
do_test_pattern(stationaryorbit.core.test.md5 21 "MD5Table.21. . d62f105d")
do_test_pattern(stationaryorbit.core.test.md5 22 "MD5Table.22. . 2441453")
do_test_pattern(stationaryorbit.core.test.md5 23 "MD5Table.23. . d8a1e681")
do_test_pattern(stationaryorbit.core.test.md5 24 "MD5Table.24. . e7d3fbc8")
do_test_pattern(stationaryorbit.core.test.md5 25 "MD5Table.25. . 21e1cde6")
do_test_pattern(stationaryorbit.core.test.md5 26 "MD5Table.26. . c33707d6")
do_test_pattern(stationaryorbit.core.test.md5 27 "MD5Table.27. . f4d50d87")
do_test_pattern(stationaryorbit.core.test.md5 28 "MD5Table.28. . 455a14ed")
do_test_pattern(stationaryorbit.core.test.md5 29 "MD5Table.29. . a9e3e905")
do_test_pattern(stationaryorbit.core.test.md5 30 "MD5Table.30. . fcefa3f8")
do_test_pattern(stationaryorbit.core.test.md5 31 "MD5Table.31. . 676f02d9")
do_test_pattern(stationaryorbit.core.test.md5 32 "MD5Table.32. . 8d2a4c8a")
do_test_pattern(stationaryorbit.core.test.md5 33 "MD5Table.33. . fffa3942")
do_test_pattern(stationaryorbit.core.test.md5 34 "MD5Table.34. . 8771f681")
do_test_pattern(stationaryorbit.core.test.md5 35 "MD5Table.35. . 6d9d6122")
do_test_pattern(stationaryorbit.core.test.md5 36 "MD5Table.36. . fde5380c")
do_test_pattern(stationaryorbit.core.test.md5 37 "MD5Table.37. . a4beea44")
do_test_pattern(stationaryorbit.core.test.md5 38 "MD5Table.38. . 4bdecfa9")
do_test_pattern(stationaryorbit.core.test.md5 39 "MD5Table.39. . f6bb4b60")
do_test_pattern(stationaryorbit.core.test.md5 40 "MD5Table.40. . bebfbc70")
do_test_pattern(stationaryorbit.core.test.md5 41 "MD5Table.41. . 289b7ec6")
do_test_pattern(stationaryorbit.core.test.md5 42 "MD5Table.42. . eaa127fa")
do_test_pattern(stationaryorbit.core.test.md5 43 "MD5Table.43. . d4ef3085")
do_test_pattern(stationaryorbit.core.test.md5 44 "MD5Table.44. . 4881d05")
do_test_pattern(stationaryorbit.core.test.md5 45 "MD5Table.45. . d9d4d039")
do_test_pattern(stationaryorbit.core.test.md5 46 "MD5Table.46. . e6db99e5")
do_test_pattern(stationaryorbit.core.test.md5 47 "MD5Table.47. . 1fa27cf8")
do_test_pattern(stationaryorbit.core.test.md5 48 "MD5Table.48. . c4ac5665")
do_test_pattern(stationaryorbit.core.test.md5 49 "MD5Table.49. . f4292244")
do_test_pattern(stationaryorbit.core.test.md5 50 "MD5Table.50. . 432aff97")
do_test_pattern(stationaryorbit.core.test.md5 51 "MD5Table.51. . ab9423a7")
do_test_pattern(stationaryorbit.core.test.md5 52 "MD5Table.52. . fc93a039")
do_test_pattern(stationaryorbit.core.test.md5 53 "MD5Table.53. . 655b59c3")
do_test_pattern(stationaryorbit.core.test.md5 54 "MD5Table.54. . 8f0ccc92")
do_test_pattern(stationaryorbit.core.test.md5 55 "MD5Table.55. . ffeff47d")
do_test_pattern(stationaryorbit.core.test.md5 56 "MD5Table.56. . 85845dd1")
do_test_pattern(stationaryorbit.core.test.md5 57 "MD5Table.57. . 6fa87e4f")
do_test_pattern(stationaryorbit.core.test.md5 58 "MD5Table.58. . fe2ce6e0")
do_test_pattern(stationaryorbit.core.test.md5 59 "MD5Table.59. . a3014314")
do_test_pattern(stationaryorbit.core.test.md5 60 "MD5Table.60. . 4e0811a1")
do_test_pattern(stationaryorbit.core.test.md5 61 "MD5Table.61. . f7537e82")
do_test_pattern(stationaryorbit.core.test.md5 62 "MD5Table.62. . bd3af235")
do_test_pattern(stationaryorbit.core.test.md5 63 "MD5Table.63. . 2ad7d2bb")
do_test_pattern(stationaryorbit.core.test.md5 64 "MD5Table.64. . eb86d391")
do_test_pattern(stationaryorbit.core.test.md5 65 "MD5.test_pattern_0. . D41D8CD98F00B204E9800998ECF8427E")
do_test_pattern(stationaryorbit.core.test.md5 66 "MD5.test_pattern_1. . 0CC175B9C0F1B6A831C399E269772661")
do_test_pattern(stationaryorbit.core.test.md5 67 "MD5.test_pattern_2. . 900150983CD24FB0D6963F7D28E17F72")
do_test_pattern(stationaryorbit.core.test.md5 68 "MD5.test_pattern_3. . F96B697D7CB7938D525A2F31AAF161D0")
do_test_pattern(stationaryorbit.core.test.md5 69 "MD5.test_pattern_4. . C3FCD3D76192E4007DFB496CCA67E13B")
do_test_pattern(stationaryorbit.core.test.md5 70 "MD5.test_pattern_5. . D174AB98D277D9F5A5611C2C9F419D9F")
do_test_pattern(stationaryorbit.core.test.md5 71 "MD5.test_pattern_6. . 57EDF4A22BE3C955AC49DA2E2107B67A")
do_test_pattern(stationaryorbit.core.test.md5 72 "MD5.test_pattern_7. . E4D909C290D0FB1CA068FFADDF22CBD0")
do_test_pattern(stationaryorbit.core.test.md5 73 "MD5.test_pattern_8. . 119B13E82EAA45291FE89B97FDA96BA7")
do_test_pattern(stationaryorbit.core.test.md5 74 "MD5.test_pattern_9. . D89F0C2E36CA332482C9C599D417F8DC")
do_test_pattern(stationaryorbit.core.test.md5 75 "MD5.test_pattern_10. . C8C4CD8D771D0A6F7DC7D08DE43D0E18")

add_executable(stationaryorbit.core.test.objectholder test.objectholder.cpp)
target_link_libraries(stationaryorbit.core.test.objectholder stationaryorbit.core)
do_test_nofail(stationaryorbit.core.test.objectholder 1)
do_test_nofail(stationaryorbit.core.test.objectholder 2)
do_test_pattern(stationaryorbit.core.test.objectholder 3 " . 15")
do_test_pattern(stationaryorbit.core.test.objectholder 4 " . 28")
do_test_nofail(stationaryorbit.core.test.objectholder 5)
do_test_nofail(stationaryorbit.core.test.objectholder 6)
do_test_pattern(stationaryorbit.core.test.objectholder 7 " . 15")
do_test_pattern(stationaryorbit.core.test.objectholder 8 " . 15")
do_test_nofail(stationaryorbit.core.test.objectholder 9)
do_test_nofail(stationaryorbit.core.test.objectholder 10)
do_test_pattern(stationaryorbit.core.test.objectholder 11 " . 15")
do_test_nofail(stationaryorbit.core.test.objectholder 12)
do_test_nofail(stationaryorbit.core.test.objectholder 13)
do_test_pattern(stationaryorbit.core.test.objectholder 14 " . 15")
do_test_pattern(stationaryorbit.core.test.objectholder 15 " . 15")
do_test_nofail(stationaryorbit.core.test.objectholder 16)
do_test_nofail(stationaryorbit.core.test.objectholder 17)
do_test_willfail(stationaryorbit.core.test.objectholder 18)
do_test_nofail(stationaryorbit.core.test.objectholder 19)
do_test_nofail(stationaryorbit.core.test.objectholder 20)
do_test_pattern(stationaryorbit.core.test.objectholder 21 " . 15")
do_test_pattern(stationaryorbit.core.test.objectholder 22 " . 28")
do_test_nofail(stationaryorbit.core.test.objectholder 23)
do_test_nofail(stationaryorbit.core.test.objectholder 24)
do_test_pattern(stationaryorbit.core.test.objectholder 25 " . 15")
do_test_nofail(stationaryorbit.core.test.objectholder 26)
do_test_nofail(stationaryorbit.core.test.objectholder 27)
do_test_willfail(stationaryorbit.core.test.objectholder 28)
do_test_nofail(stationaryorbit.core.test.objectholder 29)
do_test_willfail(stationaryorbit.core.test.objectholder 30)
do_test_nofail(stationaryorbit.core.test.objectholder 31)
do_test_willfail(stationaryorbit.core.test.objectholder 32)
do_test_nofail(stationaryorbit.core.test.objectholder 33)
do_test_willfail(stationaryorbit.core.test.objectholder 34)
do_test_nofail(stationaryorbit.core.test.objectholder 35)
do_test_pattern(stationaryorbit.core.test.objectholder 36 " . 15")
do_test_nofail(stationaryorbit.core.test.objectholder 37)
do_test_willfail(stationaryorbit.core.test.objectholder 38)
do_test_nofail(stationaryorbit.core.test.objectholder 39)
do_test_willfail(stationaryorbit.core.test.objectholder 40)
do_test_nofail(stationaryorbit.core.test.objectholder 41)
do_test_willfail(stationaryorbit.core.test.objectholder 42)
do_test_nofail(stationaryorbit.core.test.objectholder 43)
do_test_willfail(stationaryorbit.core.test.objectholder 44)

add_executable(stationaryorbit.core.test.point2d test.point2d.cpp)
target_link_libraries(stationaryorbit.core.test.point2d stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.point2d 1 "(5, 12)")
do_test_pattern(stationaryorbit.core.test.point2d 2 "(1, -4)")
do_test_nofail(stationaryorbit.core.test.point2d 3)
do_test_pattern(stationaryorbit.core.test.point2d 4 "(-2.8, 3.8)")
do_test_pattern(stationaryorbit.core.test.point2d 5 "(3.4, -0.2)")
do_test_pattern(stationaryorbit.core.test.point2d 6 "(0, 2)")
do_test_pattern(stationaryorbit.core.test.point2d 7 "(0, 1)")
do_test_pattern(stationaryorbit.core.test.point2d 8 "(1, 2)")
do_test_pattern(stationaryorbit.core.test.point2d 9 "(0.3, 0.8)")

add_executable(stationaryorbit.core.test.property test.property.cpp)
target_link_libraries(stationaryorbit.core.test.property stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.property 1 " . 10")
do_test_pattern(stationaryorbit.core.test.property 2 " . 3")

add_executable(stationaryorbit.core.test.proportion test.proportion.cpp)
target_link_libraries(stationaryorbit.core.test.proportion stationaryorbit.core)
do_test_nofail(stationaryorbit.core.test.proportion 1)
do_test_nofail(stationaryorbit.core.test.proportion 2)
do_test_nofail(stationaryorbit.core.test.proportion 3)
do_test_nofail(stationaryorbit.core.test.proportion 4)
do_test_nofail(stationaryorbit.core.test.proportion 5)
do_test_nofail(stationaryorbit.core.test.proportion 6)
do_test_nofail(stationaryorbit.core.test.proportion 7)
do_test_nofail(stationaryorbit.core.test.proportion 8)
do_test_nofail(stationaryorbit.core.test.proportion 9)
do_test_nofail(stationaryorbit.core.test.proportion 10)
do_test_nofail(stationaryorbit.core.test.proportion 11)
do_test_nofail(stationaryorbit.core.test.proportion 12)
do_test_nofail(stationaryorbit.core.test.proportion 13)
do_test_nofail(stationaryorbit.core.test.proportion 14)
do_test_nofail(stationaryorbit.core.test.proportion 15)
do_test_nofail(stationaryorbit.core.test.proportion 16)
do_test_nofail(stationaryorbit.core.test.proportion 17)
do_test_nofail(stationaryorbit.core.test.proportion 18)
do_test_nofail(stationaryorbit.core.test.proportion 19)
do_test_nofail(stationaryorbit.core.test.proportion 20)
do_test_nofail(stationaryorbit.core.test.proportion 21)
do_test_nofail(stationaryorbit.core.test.proportion 22)
do_test_nofail(stationaryorbit.core.test.proportion 23)
do_test_nofail(stationaryorbit.core.test.proportion 24)
do_test_nofail(stationaryorbit.core.test.proportion 25)
do_test_pattern(stationaryorbit.core.test.proportion 26 "0.501960784313725")
do_test_pattern(stationaryorbit.core.test.proportion 27 "0.250980392156862")
do_test_nofail(stationaryorbit.core.test.proportion 28)
do_test_nofail(stationaryorbit.core.test.proportion 29)
do_test_nofail(stationaryorbit.core.test.proportion 30)
do_test_nofail(stationaryorbit.core.test.proportion 31)
do_test_nofail(stationaryorbit.core.test.proportion 32)
do_test_nofail(stationaryorbit.core.test.proportion 33)
do_test_pattern(stationaryorbit.core.test.proportion 34 "0.25")
do_test_pattern(stationaryorbit.core.test.proportion 35 "4629771061636907072")
do_test_nofail(stationaryorbit.core.test.proportion 36)
do_test_nofail(stationaryorbit.core.test.proportion 37)

add_executable(stationaryorbit.core.test.range test.range.cpp)
target_link_libraries(stationaryorbit.core.test.range stationaryorbit.core)
do_test_nofail(stationaryorbit.core.test.range 1)
do_test_nofail(stationaryorbit.core.test.range 2)
do_test_nofail(stationaryorbit.core.test.range 3)
do_test_nofail(stationaryorbit.core.test.range 4)
do_test_nofail(stationaryorbit.core.test.range 5)
do_test_pattern(stationaryorbit.core.test.range 6 "0 1 2 3 4 5 6 7 8 9")
do_test_pattern(stationaryorbit.core.test.range 7 "11 10 9 8 7 6 5")
do_test_nofail(stationaryorbit.core.test.range 8)

add_executable(stationaryorbit.core.test.rectangle2d test.rectangle2d.cpp)
target_link_libraries(stationaryorbit.core.test.rectangle2d stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.rectangle2d 1 "r1\.left . 0")
do_test_pattern(stationaryorbit.core.test.rectangle2d 2 "r1\.right . 3")
do_test_pattern(stationaryorbit.core.test.rectangle2d 3 "r1\.top . 4")
do_test_pattern(stationaryorbit.core.test.rectangle2d 4 "r1\.bottom . 0")
do_test_nofail(stationaryorbit.core.test.rectangle2d 5)
do_test_pattern(stationaryorbit.core.test.rectangle2d 6 "r2\.left . -3")
do_test_pattern(stationaryorbit.core.test.rectangle2d 7 "r2\.right . 0")
do_test_pattern(stationaryorbit.core.test.rectangle2d 8 "r2\.top . 10")
do_test_pattern(stationaryorbit.core.test.rectangle2d 9 "r2\.bottom . 6")

add_executable(stationaryorbit.core.test.ringbuffer test.ringbuffer.cpp)
target_link_libraries(stationaryorbit.core.test.ringbuffer stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.ringbuffer 1 " . 1 2 4 7")
do_test_pattern(stationaryorbit.core.test.ringbuffer 2 " . 1 2 4 7")
do_test_pattern(stationaryorbit.core.test.ringbuffer 3 " . 7 4 2 1")
do_test_pattern(stationaryorbit.core.test.ringbuffer 4 " . 7 4 2 1")
do_test_willfail(stationaryorbit.core.test.ringbuffer 5)
do_test_willfail(stationaryorbit.core.test.ringbuffer 6)

add_executable(stationaryorbit.core.test.rotation test.rotation.cpp)
target_link_libraries(stationaryorbit.core.test.rotation stationaryorbit.core)
do_test_pattern(stationaryorbit.core.test.rotation 1 "radian . 0\.52359[89]")
do_test_pattern(stationaryorbit.core.test.rotation 2 "degree . 90")
do_test_pattern(stationaryorbit.core.test.rotation 3 " . 120")
do_test_pattern(stationaryorbit.core.test.rotation 4 " . 300")
do_test_pattern(stationaryorbit.core.test.rotation 5 " . 180")
do_test_pattern(stationaryorbit.core.test.rotation 6 " . 15")
do_test_nofail(stationaryorbit.core.test.rotation 7)
do_test_nofail(stationaryorbit.core.test.rotation 8)
do_test_nofail(stationaryorbit.core.test.rotation 9)
do_test_nofail(stationaryorbit.core.test.rotation 10)
do_test_nofail(stationaryorbit.core.test.rotation 11)
do_test_nofail(stationaryorbit.core.test.rotation 12)
do_test_pattern(stationaryorbit.core.test.rotation 13 "sin . 0")
do_test_pattern(stationaryorbit.core.test.rotation 14 "sin . 0\.5")
do_test_pattern(stationaryorbit.core.test.rotation 15 "sin . 0\.70710[67]")
do_test_pattern(stationaryorbit.core.test.rotation 16 "sin . 0\.866025")
do_test_pattern(stationaryorbit.core.test.rotation 17 "sin . 1")
do_test_pattern(stationaryorbit.core.test.rotation 18 "sin . 0\.866025")
do_test_pattern(stationaryorbit.core.test.rotation 19 "sin . 0\.70710[67]")
do_test_pattern(stationaryorbit.core.test.rotation 20 "sin . 0\.5")
do_test_pattern(stationaryorbit.core.test.rotation 21 "sin . -?0")
do_test_pattern(stationaryorbit.core.test.rotation 22 "sin . -0\.5")
do_test_pattern(stationaryorbit.core.test.rotation 23 "sin . -0\.70710[67]")
do_test_pattern(stationaryorbit.core.test.rotation 24 "sin . -0\.866025")
do_test_pattern(stationaryorbit.core.test.rotation 25 "sin . -1")
do_test_pattern(stationaryorbit.core.test.rotation 26 "sin . -0\.866025")
do_test_pattern(stationaryorbit.core.test.rotation 27 "sin . -0\.70710[67]")
do_test_pattern(stationaryorbit.core.test.rotation 28 "sin . -0\.5")
do_test_pattern(stationaryorbit.core.test.rotation 29 "cos . 1")
do_test_pattern(stationaryorbit.core.test.rotation 30 "cos . 0\.866025")
do_test_pattern(stationaryorbit.core.test.rotation 31 "cos . 0\.70710[67]")
do_test_pattern(stationaryorbit.core.test.rotation 32 "cos . 0\.5")
do_test_pattern(stationaryorbit.core.test.rotation 33 "cos . -?0")
do_test_pattern(stationaryorbit.core.test.rotation 34 "cos . -0\.5")
do_test_pattern(stationaryorbit.core.test.rotation 35 "cos . -0\.70710[67]")
do_test_pattern(stationaryorbit.core.test.rotation 36 "cos . -0\.866025")
do_test_pattern(stationaryorbit.core.test.rotation 37 "cos . -1")
do_test_pattern(stationaryorbit.core.test.rotation 38 "cos . -0\.866025")
do_test_pattern(stationaryorbit.core.test.rotation 39 "cos . -0\.70710[67]")
do_test_pattern(stationaryorbit.core.test.rotation 40 "cos . -0\.5")
do_test_pattern(stationaryorbit.core.test.rotation 41 "cos . -?0")
do_test_pattern(stationaryorbit.core.test.rotation 42 "cos . 0\.5")
do_test_pattern(stationaryorbit.core.test.rotation 43 "cos . 0\.70710[67]")
do_test_pattern(stationaryorbit.core.test.rotation 44 "cos . 0\.866025")

add_executable(stationaryorbit.core.test.zerovalue test.zerovalue.cpp)
target_link_libraries(stationaryorbit.core.test.zerovalue stationaryorbit.core)
do_test_nofail(stationaryorbit.core.test.zerovalue 1)
do_test_nofail(stationaryorbit.core.test.zerovalue 2)
do_test_nofail(stationaryorbit.core.test.zerovalue 3)
do_test_nofail(stationaryorbit.core.test.zerovalue 4)
do_test_nofail(stationaryorbit.core.test.zerovalue 5)
do_test_nofail(stationaryorbit.core.test.zerovalue 6)
do_test_nofail(stationaryorbit.core.test.zerovalue 7)
do_test_nofail(stationaryorbit.core.test.zerovalue 8)
do_test_pattern(stationaryorbit.core.test.zerovalue 9 "5")
